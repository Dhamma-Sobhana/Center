version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
    restart: unless-stopped
    # ports:
    #   - "3000:3000"
  backend:
    image: strapi/strapi
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_NAME: strapi
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
    volumes:
      - ./backend:/srv/app
    # ports:
    #   - '1337:1337'
    depends_on:
      - postgres
    restart: unless-stopped
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: strapi
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
    volumes:
      - ./data:/var/lib/postgresql/data
    # ports:
    #   - 5432:5432
  nginx-proxy:
    image: nginx
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    #ports:
    #  - '80:80'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.nginx-proxy.rule=Host(`${VIRTUAL_HOST}`, `api.${VIRTUAL_HOST}`)'
      - 'traefik.http.routers.nginx-proxy.entrypoints=websecure'
      - 'traefik.http.routers.nginx-proxy.tls.certresolver=myresolver'
    restart: unless-stopped
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=${ADMIN_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    #  - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"